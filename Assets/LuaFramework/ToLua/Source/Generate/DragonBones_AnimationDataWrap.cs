//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBones_AnimationDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBones.AnimationData), typeof(DragonBones.BaseObject));
		L.RegFunction("CacheFrames", CacheFrames);
		L.RegFunction("AddBoneTimeline", AddBoneTimeline);
		L.RegFunction("AddSlotTimeline", AddSlotTimeline);
		L.RegFunction("AddConstraintTimeline", AddConstraintTimeline);
		L.RegFunction("GetBoneTimelines", GetBoneTimelines);
		L.RegFunction("GetSlotTimelines", GetSlotTimelines);
		L.RegFunction("GetConstraintTimelines", GetConstraintTimelines);
		L.RegFunction("GetBoneCachedFrameIndices", GetBoneCachedFrameIndices);
		L.RegFunction("GetSlotCachedFrameIndices", GetSlotCachedFrameIndices);
		L.RegFunction("New", _CreateDragonBones_AnimationData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("frameIntOffset", get_frameIntOffset, set_frameIntOffset);
		L.RegVar("frameFloatOffset", get_frameFloatOffset, set_frameFloatOffset);
		L.RegVar("frameOffset", get_frameOffset, set_frameOffset);
		L.RegVar("frameCount", get_frameCount, set_frameCount);
		L.RegVar("playTimes", get_playTimes, set_playTimes);
		L.RegVar("duration", get_duration, set_duration);
		L.RegVar("scale", get_scale, set_scale);
		L.RegVar("fadeInTime", get_fadeInTime, set_fadeInTime);
		L.RegVar("cacheFrameRate", get_cacheFrameRate, set_cacheFrameRate);
		L.RegVar("name", get_name, set_name);
		L.RegVar("cachedFrames", get_cachedFrames, null);
		L.RegVar("boneTimelines", get_boneTimelines, null);
		L.RegVar("slotTimelines", get_slotTimelines, null);
		L.RegVar("constraintTimelines", get_constraintTimelines, null);
		L.RegVar("boneCachedFrameIndices", get_boneCachedFrameIndices, null);
		L.RegVar("slotCachedFrameIndices", get_slotCachedFrameIndices, null);
		L.RegVar("actionTimeline", get_actionTimeline, set_actionTimeline);
		L.RegVar("zOrderTimeline", get_zOrderTimeline, set_zOrderTimeline);
		L.RegVar("parent", get_parent, set_parent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDragonBones_AnimationData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DragonBones.AnimationData obj = new DragonBones.AnimationData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DragonBones.AnimationData.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CacheFrames(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.CacheFrames(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddBoneTimeline(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			DragonBones.BoneData arg0 = (DragonBones.BoneData)ToLua.CheckObject<DragonBones.BoneData>(L, 2);
			DragonBones.TimelineData arg1 = (DragonBones.TimelineData)ToLua.CheckObject<DragonBones.TimelineData>(L, 3);
			obj.AddBoneTimeline(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSlotTimeline(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			DragonBones.SlotData arg0 = (DragonBones.SlotData)ToLua.CheckObject<DragonBones.SlotData>(L, 2);
			DragonBones.TimelineData arg1 = (DragonBones.TimelineData)ToLua.CheckObject<DragonBones.TimelineData>(L, 3);
			obj.AddSlotTimeline(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddConstraintTimeline(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			DragonBones.ConstraintData arg0 = (DragonBones.ConstraintData)ToLua.CheckObject<DragonBones.ConstraintData>(L, 2);
			DragonBones.TimelineData arg1 = (DragonBones.TimelineData)ToLua.CheckObject<DragonBones.TimelineData>(L, 3);
			obj.AddConstraintTimeline(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBoneTimelines(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<DragonBones.TimelineData> o = obj.GetBoneTimelines(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSlotTimelines(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<DragonBones.TimelineData> o = obj.GetSlotTimelines(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetConstraintTimelines(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<DragonBones.TimelineData> o = obj.GetConstraintTimelines(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBoneCachedFrameIndices(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<int> o = obj.GetBoneCachedFrameIndices(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSlotCachedFrameIndices(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)ToLua.CheckObject<DragonBones.AnimationData>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<int> o = obj.GetSlotCachedFrameIndices(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameIntOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint ret = obj.frameIntOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameIntOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameFloatOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint ret = obj.frameFloatOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameFloatOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint ret = obj.frameOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint ret = obj.frameCount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playTimes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint ret = obj.playTimes;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playTimes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float ret = obj.duration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float ret = obj.scale;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fadeInTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float ret = obj.fadeInTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fadeInTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cacheFrameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float ret = obj.cacheFrameRate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cacheFrameRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cachedFrames(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			System.Collections.Generic.List<bool> ret = obj.cachedFrames;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cachedFrames on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_boneTimelines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<DragonBones.TimelineData>> ret = obj.boneTimelines;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index boneTimelines on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_slotTimelines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<DragonBones.TimelineData>> ret = obj.slotTimelines;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index slotTimelines on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constraintTimelines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<DragonBones.TimelineData>> ret = obj.constraintTimelines;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constraintTimelines on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_boneCachedFrameIndices(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<int>> ret = obj.boneCachedFrameIndices;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index boneCachedFrameIndices on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_slotCachedFrameIndices(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<int>> ret = obj.slotCachedFrameIndices;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index slotCachedFrameIndices on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_actionTimeline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			DragonBones.TimelineData ret = obj.actionTimeline;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index actionTimeline on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_zOrderTimeline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			DragonBones.TimelineData ret = obj.zOrderTimeline;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zOrderTimeline on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_parent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			DragonBones.ArmatureData ret = obj.parent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameIntOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.frameIntOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameIntOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameFloatOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.frameFloatOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameFloatOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.frameOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.frameCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playTimes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.playTimes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playTimes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.duration = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.scale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fadeInTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fadeInTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fadeInTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cacheFrameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.cacheFrameRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cacheFrameRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_actionTimeline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			DragonBones.TimelineData arg0 = (DragonBones.TimelineData)ToLua.CheckObject<DragonBones.TimelineData>(L, 2);
			obj.actionTimeline = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index actionTimeline on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_zOrderTimeline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			DragonBones.TimelineData arg0 = (DragonBones.TimelineData)ToLua.CheckObject<DragonBones.TimelineData>(L, 2);
			obj.zOrderTimeline = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zOrderTimeline on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_parent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.AnimationData obj = (DragonBones.AnimationData)o;
			DragonBones.ArmatureData arg0 = (DragonBones.ArmatureData)ToLua.CheckObject<DragonBones.ArmatureData>(L, 2);
			obj.parent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parent on a nil value");
		}
	}
}


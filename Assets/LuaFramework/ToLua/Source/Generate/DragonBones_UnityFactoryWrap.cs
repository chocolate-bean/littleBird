//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBones_UnityFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBones.UnityFactory), typeof(DragonBones.BaseFactory));
		L.RegFunction("BuildArmatureComponent", BuildArmatureComponent);
		L.RegFunction("GetTextureDisplay", GetTextureDisplay);
		L.RegFunction("Clear", Clear);
		L.RegFunction("LoadData", LoadData);
		L.RegFunction("LoadDragonBonesData", LoadDragonBonesData);
		L.RegFunction("LoadTextureAtlasData", LoadTextureAtlasData);
		L.RegFunction("RefreshAllTextureAtlas", RefreshAllTextureAtlas);
		L.RegFunction("ReplaceDisplay", ReplaceDisplay);
		L.RegFunction("ReplaceSlotDisplay", ReplaceSlotDisplay);
		L.RegFunction("GetCacheUnityDragonBonesData", GetCacheUnityDragonBonesData);
		L.RegFunction("AddCacheUnityDragonBonesData", AddCacheUnityDragonBonesData);
		L.RegFunction("New", _CreateDragonBones_UnityFactory);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("factory", get_factory, null);
		L.RegVar("soundEventManager", get_soundEventManager, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDragonBones_UnityFactory(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DragonBones.UnityFactory obj = new DragonBones.UnityFactory();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				DragonBones.DataParser arg0 = (DragonBones.DataParser)ToLua.CheckObject<DragonBones.DataParser>(L, 1);
				DragonBones.UnityFactory obj = new DragonBones.UnityFactory(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DragonBones.UnityFactory.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildArmatureComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				DragonBones.UnityArmatureComponent o = obj.BuildArmatureComponent(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				DragonBones.UnityArmatureComponent o = obj.BuildArmatureComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				DragonBones.UnityArmatureComponent o = obj.BuildArmatureComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 5)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.UnityArmatureComponent o = obj.BuildArmatureComponent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 6)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				UnityEngine.GameObject arg4 = (UnityEngine.GameObject)ToLua.CheckObject(L, 6, typeof(UnityEngine.GameObject));
				DragonBones.UnityArmatureComponent o = obj.BuildArmatureComponent(arg0, arg1, arg2, arg3, arg4);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 7)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				UnityEngine.GameObject arg4 = (UnityEngine.GameObject)ToLua.CheckObject(L, 6, typeof(UnityEngine.GameObject));
				bool arg5 = LuaDLL.luaL_checkboolean(L, 7);
				DragonBones.UnityArmatureComponent o = obj.BuildArmatureComponent(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.BuildArmatureComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTextureDisplay(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.GameObject o = obj.GetTextureDisplay(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 3)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.GameObject o = obj.GetTextureDisplay(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.GetTextureDisplay");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				obj.Clear();
				return 0;
			}
			else if (count == 2)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.Clear(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.Clear");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData arg0 = (DragonBones.UnityDragonBonesData)ToLua.CheckObject<DragonBones.UnityDragonBonesData>(L, 2);
				DragonBones.DragonBonesData o = obj.LoadData(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData arg0 = (DragonBones.UnityDragonBonesData)ToLua.CheckObject<DragonBones.UnityDragonBonesData>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				DragonBones.DragonBonesData o = obj.LoadData(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData arg0 = (DragonBones.UnityDragonBonesData)ToLua.CheckObject<DragonBones.UnityDragonBonesData>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				DragonBones.DragonBonesData o = obj.LoadData(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData arg0 = (DragonBones.UnityDragonBonesData)ToLua.CheckObject<DragonBones.UnityDragonBonesData>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
				DragonBones.DragonBonesData o = obj.LoadData(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.LoadData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadDragonBonesData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				DragonBones.DragonBonesData o = obj.LoadDragonBonesData(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.TextAsset>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				UnityEngine.TextAsset arg0 = (UnityEngine.TextAsset)ToLua.ToObject(L, 2);
				DragonBones.DragonBonesData o = obj.LoadDragonBonesData(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, string>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				DragonBones.DragonBonesData o = obj.LoadDragonBonesData(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.TextAsset, string>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				UnityEngine.TextAsset arg0 = (UnityEngine.TextAsset)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				DragonBones.DragonBonesData o = obj.LoadDragonBonesData(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<string, string, float>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				DragonBones.DragonBonesData o = obj.LoadDragonBonesData(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.TextAsset, string, float>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				UnityEngine.TextAsset arg0 = (UnityEngine.TextAsset)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				DragonBones.DragonBonesData o = obj.LoadDragonBonesData(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.LoadDragonBonesData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadTextureAtlasData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, string>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<DragonBones.UnityDragonBonesData.TextureAtlas, string>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData.TextureAtlas arg0 = (DragonBones.UnityDragonBonesData.TextureAtlas)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<string, string, float>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<DragonBones.UnityDragonBonesData.TextureAtlas, string, float>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData.TextureAtlas arg0 = (DragonBones.UnityDragonBonesData.TextureAtlas)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<string, string, float, bool>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<DragonBones.UnityDragonBonesData.TextureAtlas, string, float, bool>(L, 2))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.UnityDragonBonesData.TextureAtlas arg0 = (DragonBones.UnityDragonBonesData.TextureAtlas)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				DragonBones.UnityTextureAtlasData o = obj.LoadTextureAtlasData(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.LoadTextureAtlasData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshAllTextureAtlas(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
			DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 2);
			obj.RefreshAllTextureAtlas(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReplaceDisplay(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.Slot arg0 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 2);
				DragonBones.DisplayData arg1 = (DragonBones.DisplayData)ToLua.CheckObject<DragonBones.DisplayData>(L, 3);
				obj.ReplaceDisplay(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				DragonBones.Slot arg0 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 2);
				DragonBones.DisplayData arg1 = (DragonBones.DisplayData)ToLua.CheckObject<DragonBones.DisplayData>(L, 3);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
				obj.ReplaceDisplay(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.ReplaceDisplay");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReplaceSlotDisplay(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 6);
				bool o = obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.Texture2D>(L, 7))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 6);
				UnityEngine.Texture2D arg5 = (UnityEngine.Texture2D)ToLua.ToObject(L, 7);
				obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<int>(L, 7))
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 6);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 7);
				bool o = obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 8)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 6);
				UnityEngine.Texture2D arg5 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 7, typeof(UnityEngine.Texture2D));
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 8);
				obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 9)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 6);
				UnityEngine.Texture2D arg5 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 7, typeof(UnityEngine.Texture2D));
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 8);
				bool arg7 = LuaDLL.luaL_checkboolean(L, 9);
				obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 10)
			{
				DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject<DragonBones.Slot>(L, 6);
				UnityEngine.Texture2D arg5 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 7, typeof(UnityEngine.Texture2D));
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 8);
				bool arg7 = LuaDLL.luaL_checkboolean(L, 9);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 10);
				obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBones.UnityFactory.ReplaceSlotDisplay");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCacheUnityDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			DragonBones.UnityDragonBonesData o = obj.GetCacheUnityDragonBonesData(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddCacheUnityDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.UnityFactory obj = (DragonBones.UnityFactory)ToLua.CheckObject<DragonBones.UnityFactory>(L, 1);
			DragonBones.UnityDragonBonesData arg0 = (DragonBones.UnityDragonBonesData)ToLua.CheckObject<DragonBones.UnityDragonBonesData>(L, 2);
			obj.AddCacheUnityDragonBonesData(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_factory(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, DragonBones.UnityFactory.factory);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_soundEventManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.UnityFactory obj = (DragonBones.UnityFactory)o;
			DragonBones.IEventDispatcher<DragonBones.EventObject> ret = obj.soundEventManager;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index soundEventManager on a nil value");
		}
	}
}

